/**
 * XXX
 * XXX
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddThingsCommand from '../model/AddThingsCommand';
import AddThingsCommandResponse from '../model/AddThingsCommandResponse';

/**
* Users service.
* @module api/UsersApi
* @version 0.0.1
*/
export default class UsersApi {

    /**
    * Constructs a new UsersApi. 
    * @alias module:api/UsersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addThings operation.
     * @callback module:api/UsersApi~addThingsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AddThingsCommandResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Number} id 
     * @param {module:model/AddThingsCommand} addThingsCommand 
     * @param {module:api/UsersApi~addThingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AddThingsCommandResponse}
     */
    addThings(id, addThingsCommand, callback) {
      let postBody = addThingsCommand;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling addThings");
      }
      // verify the required parameter 'addThingsCommand' is set
      if (addThingsCommand === undefined || addThingsCommand === null) {
        throw new Error("Missing the required parameter 'addThingsCommand' when calling addThings");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AddThingsCommandResponse;
      return this.apiClient.callApi(
        '/user/{id}/things', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
